<?xml version="1.0"?>
<robot name="raskar" xmlns:xacro="http://www.ros.org/wiki/xacro">

  <!-- Constants for robot dimensions -->
  <xacro:property name="Pi"              value="3.1415926535897931"/>
  <xacro:property name="mass_body"       value="68.0"  /> <!-- Mass of car        -->
  <xacro:property name="mass_wheel"      value="1.8"   /> <!-- Mass of wheel      -->
  <xacro:property name="mass_lidar"      value="0.1"   /> <!-- Mass of lidar      -->

  <xacro:property name="width_body"      value="0.628" /> <!-- Width of car       -->
  <xacro:property name="length_body"     value="0.948" /> <!-- Length of car      -->
  <xacro:property name="height_body"     value="0.282" /> <!-- Height of car      -->

  <xacro:property name="diam_wheel"      value="0.127" /> <!-- Diameter of wheel  -->
  <xacro:property name="thickness_wheel" value="0.066" /> <!-- Thickness of wheel -->

  <xacro:property name="diam_lidar"      value="0.075" /> <!-- Angle of lidar     -->
  <xacro:property name="thickness_lidar" value="0.045" /> <!-- Thickness of wheel -->

  <xacro:property name="safety_offset"   value="1.25"  /> <!-- Percentage safety  -->
  <xacro:property name="floor_clearance" value="0.0350"/> <!-- Floor clearance    -->
  <xacro:property name="model_offset"    value="0.0127"/> <!-- Floor clearance    -->

 
  <!-- Gazebo initializer -->
  <!-- Import all Gazebo-customization elements, including Gazebo colors -->
  <xacro:include filename="$(find raskar_urdf)/urdf/raskar_params.gazebo" />
  <!-- Import Rviz colors -->
  <xacro:include filename="$(find raskar_urdf)/urdf/materials.xacro"      />

  <!-- Other mechanical elements -->
  <!-- Import Wheels -->
  <xacro:include filename="$(find raskar_urdf)/urdf/wheel.urdf.xacro" /> 
  <!-- Import Sensors -->
  <xacro:include filename="$(find raskar_urdf)/urdf/ultrasound.urdf.xacro" /> 
  <xacro:include filename="$(find raskar_urdf)/urdf/lidar.urdf.xacro" /> 
  <xacro:include filename="$(find raskar_urdf)/urdf/imu.urdf.xacro" />


  <!-- Macro for calculating inertia of cylinder -->
  <macro name="cylinder_inertia" params="m r h">
    <inertia  ixx="${m*(3*r*r+h*h)/12}" ixy = "0" ixz = "0"
              iyy="${m*(3*r*r+h*h)/12}" iyz = "0"
              izz="${m*r*r/2}" /> 
  </macro>

  <!-- Macro for calculating inertia of box -->
  <macro name="box_inertia" params="m h l w">
    <inertia  ixx="${m*(h*h+l*l)/12}" ixy = "0" ixz = "0"
              iyy="${m*(w*w+l*l)/12}" iyz = "0"
              izz="${m*(w*w+h*h)/12}" /> 
  </macro>


  <!-- Used for fixing robot to Gazebo -->
  <!-- link name="floor"/>

  <joint name="fixed" type="fixed">
    <parent link="floor"/>
    <child link="base_footprint"/>
  </joint -->

  <!-- BASE-FOOTPRINT -->
  <!-- base_footprint is a fictitious link(frame) that is on the ground right below base_link origin -->
  <link name="base_footprint">
    <!-- inertial>
      <mass value="0.0001" />
      <origin xyz="0 0 0" />
      <inertia ixx="0.0001" ixy="0.0" ixz="0.0"
          iyy="0.0001" iyz="0.0" 
          izz="0.0001" />
    </inertial -->
    <visual>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
            <box size="0.001 0.001 0.001" />
        </geometry>
    </visual>
  </link>

  <gazebo reference="base_footprint">
    <turnGravityOff>false</turnGravityOff>
  </gazebo>

  <joint name="base_footprint_joint" type="fixed">
    <origin xyz="0 0 ${height_body/2}" rpy="0 0 0" />
    <parent link="base_footprint"/>
    <child link="base_link" />
  </joint>


  <!-- BASE-LINK -->
  <link name="base_link">
    <visual>
      <origin rpy="1.571 0 0" xyz="0 0 ${-height_body/2-floor_clearance-model_offset}"/> <!-- Half an inch due to different wheels set up -->
      <geometry>	
        <mesh filename="package://raskar_urdf/meshes/body_parts.stl" scale="0.001 0.001 0.001" />	
      </geometry>
      <material name="pale_grey"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0.25"/>
      <geometry>
        <!--box size="0.948 0.636 0.3"/-->
        <box size="0.998 0.678 0.35"/>
      </geometry>      
    </collision>
    <inertial>
      <mass value="${mass_body}"/>   
      <origin xyz="0 0 0" />
      <box_inertia  m="${mass_body}" h="${height_body}" l="${length_body}" w="${width_body}" />
    </inertial>
  </link>


  <!-- Wheels Definition -->
  <wheel fb="bk" lr="right"  parent="base_link" translateX="-1" translateY="-1" translateZ="${((-height_body/2)-floor_clearance)}" flipY="1"/>
  <wheel fb="fr" lr="right"  parent="base_link" translateX="1"  translateY="-1" translateZ="${((-height_body/2)-floor_clearance)}" flipY="1"/>
  <wheel fb="fr" lr="left" parent="base_link" translateX="1"  translateY="1"  translateZ="${((-height_body/2)-floor_clearance)}" flipY="1"/>
  <wheel fb="bk" lr="left" parent="base_link" translateX="-1" translateY="1"  translateZ="${((-height_body/2)-floor_clearance)}" flipY="1"/>


  <!-- Ultrasound sensors definition -->
  <ultrasound fb="fr" cnc="nocorner" lr="right"  parent="base_link" translateX="1" translateY="-1" translateZ="${((-height_body/2)-floor_clearance)}" flipX="90" flipY="0" flipZ="90" rotateTheta="0"/>
  <ultrasound fb="fr" cnc="nocorner" lr="left"   parent="base_link" translateX="1" translateY="1"  translateZ="${((-height_body/2)-floor_clearance)}" flipX="90" flipY="0" flipZ="90" rotateTheta="0"/>

  <ultrasound fb="fr" cnc="corner"   lr="right"  parent="base_link" translateX="0.8991870987"  translateY="-2.5038" translateZ="${((-height_body/2)-floor_clearance)}" flipX="90" flipY="0" flipZ="90" rotateTheta="-45"/>
  <ultrasound fb="fr" cnc="corner"   lr="left"   parent="base_link" translateX="0.8991870987"  translateY="2.5038"  translateZ="${((-height_body/2)-floor_clearance)}" flipX="90" flipY="0" flipZ="90" rotateTheta="45"/>

  <ultrasound fb="bk" cnc="corner"   lr="right"  parent="base_link" translateX="-0.8991870987" translateY="-2.5038" translateZ="${((-height_body/2)-floor_clearance)}" flipX="90" flipY="0" flipZ="90" rotateTheta="225"/>
  <ultrasound fb="bk" cnc="corner"   lr="left"   parent="base_link" translateX="-0.8991870987" translateY="2.5038"  translateZ="${((-height_body/2)-floor_clearance)}" flipX="90" flipY="0" flipZ="90" rotateTheta="135"/>


  <!-- Lidar definition -->
  <lidar fb="fr"  cnc="nocorner"   lrc="center"  parent="base_link" translateX="1" translateY="1"  translateZ="${(-height_body/2)-floor_clearance}" flipX="0" flipY="0" flipZ="0"/>


  <!-- IMU definition -->
  <imu fb="fr"  lrc="center"  parent="base_link" translateX="1" translateY="1"  translateZ="${(-height_body/2)-floor_clearance}" flipX="0" flipY="0" flipZ="0" rotateTheta="0"/>

	
  <!-- Motion controller -->  
  <!-- Planar drive controller  -->
  <gazebo>
    <plugin name="omni_steering" filename="libgazebo_ros_planar_move.so">

      <!-- rosDebugLevel>Debug</rosDebugLevel>
      <publishWheelTF>false</publishWheelTF>
      <robotNamespace>/</robotNamespace>
      
      <publishWheelJointState>false</publishWheelJointState>
      <alwaysOn>true</alwaysOn>
      <updateRate>100.0</updateRate>
      <leftJoint>front_left_wheel_joint</leftJoint>
      <rightJoint>front_right_wheel_joint</rightJoint>
      <wheelSeparation>${2*base_radius}</wheelSeparation>
      <wheelDiameter>${2*wheel_radius}</wheelDiameter>
      <broadcastTF>1</broadcastTF>
      <wheelTorque>30</wheelTorque>
      <wheelAcceleration>1.8</wheelAcceleration -->

      <commandTopic>cmd_vel</commandTopic>
      <odometryFrame>odom</odometryFrame> 
      <odometryTopic>odom</odometryTopic> 
      <odometryRate>50.0</odometryRate> 
      <robotBaseFrame>base_footprint</robotBaseFrame>
      <publishTf>false</publishTf>

    </plugin>
  </gazebo> 


</robot>
